@using LkModule.Areas.Lk.Models
@model PuFrontModel

<link href="~/Content/plugins/select2/css/select2.min.css" rel="stylesheet" />
<script src="~/Content/plugins/select2/select2.min.js"></script>

@{
    Layout = ViewBag.Layout;
}

@Html.Partial("Partial/header")
<div class="content">
    <div class="filterByDateBlock">
        <form role="form">
            <div class="row">
                <div class="col-xs-8 col-sm-6">
                    <div class="form-group">
                        <select id="deviceItem-select" class="form-control select2">
                            @if (Model.List != null && Model.List.Items != null && Model.List.Items.Count() > 0)
                            {
                                foreach (var item in Model.List.Items)
                                {
                                    if (item.IsPu)
                                    {
                                        <option value="@item.Id">@item.Name (@item.Number)</option>
                                    }
                                }
                            }
                        </select>
                    </div>
                </div>
                <div class="col-xs-4">
                    <div class="form-group">
                        <button type="submit" class="btn btn-default">Показать</button>
                    </div>
                </div>
            </div>
        </form>
    </div>

    <div class="nav-tabs-custom">
        <ul class="nav nav-tabs">
            <li class="active"><a href="#tab_1" data-toggle="tab" aria-expanded="true">Общая информация</a></li>
            <li id="deviceMetersInfo-tab"><a href="#tab_2" data-toggle="tab" aria-expanded="false">Показания</a></li>
        </ul>
        <div class="tab-content">
            <div class="tab-pane active" id="tab_1">

                @if (Model.List != null && Model.List.Items != null && Model.List.Items.Count() > 0)
                {
                    foreach (var item in Model.List.Items)
                    {
                        if (item.IsPu)
                        {
                            <div id="meter_@item.Id" class="meterInfo topIndent-20 hidden">
                                <h3 class="box-title">Счетчик: @item.Name (@item.Number)</h3>
                                <div class="table-responsive">
                                    <div class="li-desc"><span>Дата установки:</span> @(item.InstallDate.HasValue ? item.InstallDate.Value.ToString("dd.MM.yyyy") : "")</div>
                                    <div class="li-desc"><span>Адресс установки:</span> @item.InstallPlace</div>
                                    <div class="li-desc"><span>Дата поверки:</span> @(item.CheckDate.HasValue ? item.CheckDate.Value.ToString("dd.MM.yyyy") : "")</div>
                                    <br />
                                    @if (item.DeviceInfo != null)
                                    {
                                        <div class="li-desc"><span>Марка:</span> @item.DeviceInfo.Name</div>
                                        <div class="li-desc"><span>Разрядность:</span> @item.DeviceInfo.Modification</div>
                                        <div class="li-desc"><span>Производитель:</span> @item.DeviceInfo.Manufactirer</div>
                                        <div class="li-desc"><span>Вид:</span> @item.DeviceInfo.EnergyCategory</div>
                                        <div class="li-desc"><span>Класс:</span> @item.DeviceInfo.PrecissionClass</div>
                                        <div class="li-desc"><span>Напряжение:</span> @item.DeviceInfo.VoltageNominal</div>
                                        <div class="li-desc"><span>Тип:</span> @item.DeviceInfo.DeviceCategory</div>
                                        <div class="li-desc"><span>Трехфазный:</span> @(item.DeviceInfo.Phase3 ? "да" : "нет")</div>

                                        <br />
                                        <div class="li-desc"><span>Тариф:</span> @item.DeviceInfo.Tariff</div>
                                        <div class="li-desc"><span>Расчетный коэфициент:</span> @item.Multiplier.ToString("N2")</div>
                                    }
                                </div>
                            </div>
                        }
                    }
                }
                else
                {
                    <div class="noItems topIndent-20">Нет данных</div>

                }
            </div>
            <!-- /.tab-pane -->
            <div class="tab-pane device-meters" id="tab_2">
                <h3>Переданные показания</h3>
                @Html.Partial("/sites/rushydro/view/module/lk/PU/Part/ReadingsFilter.cshtml")
                <div id="deviceMetersData-block">
                    <div class="noItems topIndent-20">Нет данных</div>
                </div>
                @*
                    ajax data from page
                    "/Views/Modules/Pu/Part/CounterReading.cshtml"
                *@
            </div>
                      
            <!-- /.tab-pane -->
        </div>
        <!-- /.tab-content -->
    </div>

    <div class="box box-primary topIndent-20 collapsed-box">
        <div class="box-header with-border">
            <h3 class="box-title">Дополнительные учетные показатели</h3>

            <div class="box-tools pull-right">
                <button type="button" class="btn btn-box-tool" data-widget="collapse">
                    <i class="fa fa-plus"></i>
                </button>
                <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
            </div>
        </div>
        <!-- /.box-header -->
        <div class="box-body">
            <div class="table-responsive">
                <table class="table table-striped">
                    <tbody>
                        @if (Model.List != null && Model.List.Items != null && Model.List.Items.Count() > 0)
                        {
                            foreach (var item in Model.List.Items)
                            {
                                if (!item.IsPu)
                                {
                                    <tr>
                                        <td>@item.Name</td>
                                    </tr>
                                }
                            }
                        }
                    </tbody>
                </table>
            </div>
            <!-- /.table-responsive -->
        </div>
        <!-- /.box-body -->
    </div>
</div>

@section scripts {
    <script>
        $(document).ready(function (e) {
            $('.select2').select2();

            $("#meter_" + $("#deviceItem-select").val()).removeClass("hidden");

            $("#deviceItem-select").on("select2:select", function () {
                $(".meterInfo").addClass("hidden");
                $("#meter_" + $("#deviceItem-select").val()).removeClass("hidden");
                GetMetersData();
            });

            $("#deviceMetersInfo-tab").on("click", function () {
                GetMetersData();
            });

        });

        function GetMetersData() {
            var device = $("#deviceItem-select").val();
            var contentBlock = $("#deviceMetersData-block");

            if (device) {
                try {

                    var params = {
                        device: device,
                        dateBegin: $("#filterBeginDate-input2").val(),
                        dateEnd: $("#filterEndDate-input2").val()
                    };

                    //ShowPreloader(content);

                    //$.ajax({
                    //    url: "/Lk/Pu/GetPuMeters",
                    //    method: "POST",
                    //    async: true,
                    //    cache: false,
                    //    //contentType: "application/json; charset=utf-8",
                    //    //dataType: "json",
                    //    data: JSON.stringify(params)
                    //})
                    //    .done(function (response) {
                    //        contentBlock.empty();
                    //        contentBlock.html(response);
                    //    })
                    //    .fail(function (jqXHR, status) {
                    //        console.log("Ошибка" + " " + status + " " + jqXHR);
                    //        contentBlock.empty();
                    //        contentBlock.html("Не удалось загрузить данные..." + jqXHR + status);
                    //    })
                    //    .always(function (response) {

                    //    });

                    $.post("/Lk/Pu/GetPuMeters", params)
                        .done(function (data) {
                            contentBlock.empty();
                            contentBlock.html(data);
                        })
                        .fail(function (jqXHR, status) {
                            console.log("Ошибка" + " " + status + " " + jqXHR);
                            contentBlock.empty();
                            contentBlock.html("Не удалось загрузить данные..." + jqXHR + status);
                        })
                        .always(function (response) {

                        });

                }
                catch (ex) {
                    console.log(ex);
                }

                //$.ajax({
                //    type: "POST",
                //    async: true,
                //    url: "/Lk/Pu/GetPuMeters",
                //    data: ({ device: device }),
                //    success: function (data) {
                //        var obj = JSON.parse(data);

                //        if (obj.length > 0) {
                //            var result = "<table class='table table-striped table-condensed topIndent-20'>"
                //                + "<thead><tr>"
                //                + "<th>Дата</th>"
                //                + "<th>Период</th>"
                //                + "<th>Источник</th>"
                //                + "<th title='Измеряемый показатель'>Изм.показ.</th>"
                //                + "<th title='Расчетный коэфициент'>Коэф.</th>"
                //                + "<th title='Тарифная зона'>Тар.зона</th>"
                //                + "<th title='Текущее показание'>Показание</th>"
                //                + "<th titlе='Дополнительное потребление'>Доп.потреб.</th>"
                //                + "<th>Пред.показ.</th>"
                //                + "<th>Расход</th>"
                //                + "</tr></thead>"
                //                + "<tbody>";

                //            for (var i = 0; i < obj.length; i++) {

                //                result += "<tr><td>"
                //                    + dateFormat(obj[i].Date) + "</td><td>"
                //                    + obj[i].Year + "/" + obj[i].Month + "</td><td>"
                //                    + obj[i].DeliveryMethod + "</td><td>"
                //                    + "АЭ-" + "</td><td>"
                //                    + "1" + "</td><td>"
                //                    + "Сутки" + "</td><td>"
                //                    + obj[i].Value + "</td><td>"
                //                    + ((obj[i].Const != null) ? obj[i].Const : "0") + "</td><td>"
                //                    + dateFormat(obj[i].DatePrev) + "</td><td>"
                //                    + obj[i].Quantity + "</td></tr>";
                //            }

                //            result += "</tbody>"
                //                + "</table>";

                //            deviceMetersBlock.empty();
                //            deviceMetersBlock.append(result);
                //        }
                //    },
                //    error: function (data) { }
                //});
            }
        };

        function dateFormat(date) {
            if (date && date != null) {
                //date = date.replace('/Date(', '').replace(')/', '');
                var d = new Date(date);
                //var hour = addZeros(d.getHours());
                //var minutes = addZeros(d.getMinutes());
                //var seconds = addZeros(d.getSeconds());
                var day = addZeros(d.getDate());
                var month = addZeros(d.getMonth() + 1);
                var year = d.getFullYear();

                return day + '.' + month + '.' + year; //' + hour + ':' + minutes + ':' + seconds;
            }
            return '-';
        };

        function addZeros(d) {
            if (d < 10) {
                d = '0' + d;
            }
            return d;
        };
    </script>
}
<style>
    .border-block {
        padding: 30px;
        border: solid 1px #e6e6e6;
        border-radius: 4px;
        -moz-border-radius: 4px;
        -webkit-border-radius: 4px;
        font: 15px Roboto;
        color: #262626;
    }

    label {
        color: #737780;
        font-size: 12px;
        font-style: italic;
        font-family: arial;
        font-weight: normal;
    }
</style>