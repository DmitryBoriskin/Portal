@using LkModule.Areas.Admin.Models

@model MeterDeviceViewModel

@if (User.Identity.HasClaim(Model.ControllerName, "view"))
{
    <div class="content">
        <h1>@Model.PageName</h1>
        @if (Model.List != null && Model.List.Items != null && Model.List.Items.Count() > 0)
        {
            foreach (var item in Model.List.Items)
            {
                string disabled = item.Disabled ? "disabled" : "";
                string meterTitle = "meter_" + item.Id;
                string tariffTitle = "tariff_" + item.Id;

                <div class="row">
                    <div class="col-md-4">
                        <div class="list-item @disabled">
                            <div class="li-desc"><span>Счетчик:</span> @item.Name</div>
                            <div class="li-desc"><span>Номер:</span> @item.Number</div>
                            <div class="li-desc"><span>Дата установки:</span> @item.InstallDate.ToString("dd.MM.yyyy")</div>
                            <div class="li-desc"><span>Адресс установки:</span> @item.InstallPlace</div>
                            <div class="li-desc"><span>Дата проверки:</span> @(item.CheckDate.HasValue ? item.CheckDate.Value.ToString("dd.MM.yyyy") : "")</div>
                            @if (item.DeviceInfo != null)
                            {
                                <div class="li-desc"><span>Марка:</span> @item.DeviceInfo.Name</div>
                                <div class="li-desc"><span>Разрядность:</span> @item.DeviceInfo.Modification</div>
                                <div class="li-desc"><span>Производитель:</span> @item.DeviceInfo.Manufactirer</div>
                                <div class="li-desc"><span>Напряжение:</span> @item.DeviceInfo.VoltageNominal</div>
                                <div class="li-desc"><span>Класс:</span> @item.DeviceInfo.PrecissionClass</div>
                                <div class="li-desc"><span>Вид:</span> @item.DeviceInfo.EnergyCategory</div>
                                <div class="li-desc"><span>Тип:</span> @item.DeviceInfo.DeviceCategory</div>
                                <div class="li-desc"><span>Трехфазный:</span> @(item.DeviceInfo.Phase3 ? "да" : "нет")</div>
                                <div class="li-desc"><span>Тариф:</span> @item.DeviceInfo.Tariff</div>
                            }

                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="pull-right">
                            <a href="#@tariffTitle" class="tariff-info" data-device="@item.Id" data-toggle="collapse">Подробнее(тарифы)</a>
                        </div>

                        @*<div class="group-block meter-info" id="@item.Id" title="Переданные показания"></div>*@
                    </div>
                    <div class="col-md-4">
                        <div class="pull-right">
                            <a href="#@meterTitle" class="meter-info" data-device="@item.Id" data-toggle="collapse">Подробнее(показания)</a>
                        </div>
                    </div>
                </div>
                <div id="@meterTitle" class="collapse"></div>
                <div id="@tariffTitle" class="collapse"></div>
                <hr />
            }
            @*if (Model.List != null && Model.List.Pager != null)
                {
                    @Html.Partial("Partial/_pager", Model.List.Pager)
                }*@
        }
        else
        {
            <div class="alert alert-info">Не найдено ни одной записи.</div>
        }
    </div>

    <div class="dop_info-block">
        <div class="dop-caption">Фильтр</div>
        @Html.Partial("Part/Filter")
    </div>

    <div class="buttons">
        @using (Html.BeginForm(Model.ActionName, Model.ControllerName))
        {
            <button type="submit" name="action" value="back-btn" data-action="cancel" class="button icon-cancel">Назад</button>
        }
    </div>
}
else
{
    <div class="content"><p>У вас недостаточно прав.</p></div>
}

<script>
    $(".meter-info").on("click", function () {
        $(this).toggleClass("open-info");

        if ($(this).hasClass("open-info")) {
            $(this).text("Скрыть(показания)");
        }
        else {
            $(this).text("Подробнее(показания)");
        }
        var device = $(this).data("device");

        $.ajax({
            type: "POST",
            async: false,
            url: "/Admin/MeterDevices/GetInfo",
            data: ({ device: device }),
            success: function (data) {
                var obj = JSON.parse(data);

                if (obj.length > 0) {
                    var result = '<h4>Переданные показания</h4><table class="table">';
                    result += "<thead><tr><th>Дата</th><th>Показание</th><th>Тип</th></tr></thead>";
                    result += "<tbody>";
                    for (var i = 0; i < obj.length; i++) {
                        var date = new Date(parseInt(dateReplace(obj[i].Send)));
                        result += "<tr><td>" + dateParse(date) + "</td><td>" + obj[i].Output + "</td><td>" + obj[i].DrawlType.Title + "</td></tr>";
                    }
                    result += "</tbody>";
                    result += "</table>";
                    //var dev = $("#" + device + "").find(".group-block_info");
                    var dev = $("#meter_" + device + "");
                    dev.empty();
                    dev.append(result);
                }
            },
            error: function (data) { }
        });
    });

    $(".tariff-info").on("click", function () {
        $(this).toggleClass("open-info");

        if ($(this).hasClass("open-info")) {
            $(this).text("Скрыть(тарифы)");
        }
        else {
            $(this).text("Подробнее(тарифы)");
        }
        var device = $(this).data("device");

        $.ajax({
            type: "POST",
            async: false,
            url: "/Admin/MeterDevices/GetTariffes",
            data: ({ device: device }),
            success: function (data) {
                var obj = JSON.parse(data);
                //console.log(obj);
                if (obj.length > 0) {
                    var result = '<h4>Тарифы</h4><table class="table">';
                    result += "<thead><tr><th>Дата начала</th><th>Дата окончания</th><th>Учёт</th><th>Величина тарифа</th></tr></thead>";
                    result += "<tbody>";
                    for (var i = 0; i < obj.length; i++) {
                        var begin = new Date(parseInt(dateReplace(obj[i].Begin)));
                        var end = new Date(parseInt(dateReplace(obj[i].End)));
                        var vals = '';
                        for (var j = 0; j < obj[i].Values.length; j++) {
                            vals += obj[i].Values[j].Title + ": " + obj[i].Values[j].Price + " р<br />";
                        }
                        result += "<tr><td>" + dateParse(begin) + "</td><td>" + dateParse(end) + "</td><td>" + obj[i].Title + "</td><td>" + vals + "</td></tr>";
                    }
                    result += "</tbody>";
                    result += "</table>";
                    var dev = $("#tariff_" + device + "");
                    dev.empty();
                    dev.append(result);
                }
            },
            error: function (data) { }
        });
    });

    function dateReplace(date) {
        return date.replace('/Date(', '').replace(')/', '');
    }

    function dateParse(date) {
        var hour = addZeros(date.getHours());
        var minutes = addZeros(date.getMinutes());
        var seconds = addZeros(date.getSeconds());
        var day = addZeros(date.getDate());
        var month = addZeros(date.getMonth());
        var year = date.getFullYear();

        return day + '.' + month + '.' + year + ' ' + hour + ':' + minutes + ':' + seconds;
    }

    function addZeros(d) {
        if (d < 10) {
            d = '0' + d;
        }
        return d;
    }
</script>
