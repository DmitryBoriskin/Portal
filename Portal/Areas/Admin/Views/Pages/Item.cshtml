@model PageViewModel

@using (Html.BeginForm(Model.ActionName, Model.ControllerName, FormMethod.Post))
{
    //if (Model.UserResolution.Read)
    if (true)
    {
        <div class="content">
            <h1>@ViewBag.Title</h1>
            @Html.Partial("Partial/_breadCrumbs", Model.BreadCrumbs)
            @*@if (Model.BreadCrumbs != null)
                {
                }*@
            @*@if (Model.Item != null)
                {*@
            @if (Model.Item.IsDeleteble)
            {
                @Html.TextBoxFor(m => m.Item.Name, new { @title = "Название", @required = "" })
            }
            else
            {
                @Html.TextBoxFor(m => m.Item.Name, new { @title = "Название", @required = "", @readonly = "readonly" })
            }
            @if (Model.Item.IsDeleteble)
            {
                @Html.TextBoxFor(m => m.Item.Alias, new { @title = "Алиас" })
            }
            else
            {
                @Html.TextBoxFor(m => m.Item.Alias, new { @title = "Алиас", @readonly = "readonly" })
            }
            @*}
                else
                {
                    @Html.TextBoxFor(m => m.Item.Name, new { @title = "Название", @required = "" })
                    @Html.TextBoxFor(m => m.Item.Alias, new { @title = "Алиас" })
                }*@

            @Html.TextBoxFor(m => m.Item.Url, new { @title = "Ссылка" })
            @Html.HiddenFor(m => m.Item.ParentId)

            <div class="group-block" title="Текст">
                @Html.TextAreaFor(m => m.Item.Text, new { @type = "editor", @height = "300", data_dir = ViewBag.DataPath })
            </div>
            <div class="row">
                <div class="col-sm-4">
                    <h4 class="nesting_title">Список вложенностей</h4>
                </div>

                @*@if (Model.UserResolution.Write)*@
                @if (true)
                {
                    if (!String.IsNullOrEmpty(Model.Item.Alias))
                    {
                        <div class="col-sm-4">
                            <div class="bubble_but">
                                <a class="button icon-create green" href="/admin/pages/item/@Guid.NewGuid()/?parent=@Model.Item.Id">Добавить</a>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="col-sm-12">
                            <div class="alert alert-info">
                                <span class="icon-info"></span>Добавить вложенный элемент возможно только после сохранения записи!
                            </div>
                        </div>
                    }

                }

                @if (Model.Item.Childrens != null && Model.Item.Childrens.Count() > 1)
                {
                    <div class="col-sm-4">
                        <div class="bubble_but">
                            <a class="button icon-sort" data-action="noPreloader-accept" id="sorting_element" title="Добавляет возможность сортировки элементов списка">Сортировать</a>
                        </div>
                    </div>
                }
            </div>

            @if (Model.Item.Childrens != null && Model.Item.Childrens.Count() > 0)
            {
                <div class="sort_list">
                    <table id="sm_list" class="table table-striped">
                        <thead>
                            <tr>
                                <th class="map_site_title">Название</th>
                                <th class="map_site_attach">Вложения</th>
                            </tr>
                        </thead>
                        <tbody data-service="/Admin/Services/ChangePosition?group=pages">
                            @foreach (var item in Model.Item.Childrens)
                            {
                                <tr class="ui-sortable-handle" data-id="@item.Id">
                                    @if (item.Alias != " ")
                                    {
                                        string disabled = item.IsDisabled ? "disabled" : String.Empty;

                                        string _class = String.Empty;
                                        if (!String.IsNullOrEmpty(item.Url))
                                        {
                                            _class = "icon-site-link";
                                        }
                                        else if (item.CountChilds == 0)
                                        {
                                            _class = "icon-site-page";
                                        }
                                        else
                                        {
                                            _class = "icon-site-folder";
                                        }

                                        <td class="@_class @disabled"><a href="/admin/pages/item/@item.Id">@item.Name</a></td>
                                        <td class="sort-element @disabled">@item.CountChilds</td>
                                    }
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>
        <div class="dop_info-block">
            @if (Model.Item.IsDeleteble)
            {
                @*@Html.DropDownListFor(m => m.Item.FrontSection, new SelectList(Model.FrontSectionList, "Value", "Text", "page"), new { @title = "Шаблон", @class = "selectpicker", @data_help = "Выбор шаблона страницы", @required = "" })*@
            }
            <div>
                <select id="Item_MenuGroups" name="Item_MenuGroups" class="selectpicker" title="Группы меню" multiple>
                    @if (Model.MenuGroups != null && Model.MenuGroups.Count() > 0)
                    {
                        foreach (var item in Model.MenuGroups)
                        {
                            string selected = (Model.Item.MenuGroups != null && Model.Item.MenuGroups.Contains(item.Id)) ? "selected=selected" : "";
                            <option value="@item.Id" @selected>@item.Title</option>
                        }
                    }
                </select>
            </div>

            <div class="group-block" title="Мета теги">
                @Html.TextAreaFor(m => m.Item.Keywords, new { type = "text", title = "Ключевые слова", data_help = "Данный тег используется при создании краткого описания страницы, используется поисковыми системами для индексации, а также при создании аннотации в выдаче по запросу. При отсутствии тега поисковые системы выдают в аннотации первую строку документа или отрывок, содержащий ключевые слова." })
                @Html.TextAreaFor(m => m.Item.Desc, new { type = "text", title = "Краткое описание", data_help = "Данный метатег поисковые системы используют для того, чтобы определить релевантность ссылки. При формировании данного тега необходимо использовать только те слова, которые содержатся в самом документе. Использование тех слов, которых нет на странице, не рекомендуется. Рекомендованное количество слов в данном теге — не более десяти." })
            </div>
            @if (Model.Item.IsDeleteble)
            {
                @Html.CheckBoxFor(m => m.Item.IsDisabled, new { @class = "checkbox", @title = "Запретить просмотр", @data_toggle = "toggle", @data_help = "Запретить просмотр", @data_off = "Доступ разрешён", @data_on = "Доступ запрещён", @data_onstyle = "danger", @data_offstyle = "success", @data_width = "248" })
            }

            @*Видит только администратор*@
            @*@if (Model.Account.Group.ToLower().Equals("developer") || Model.Account.Group.ToLower().Equals("administrator"))*@
            @if (true)
            {
                @Html.CheckBoxFor(m => m.Item.IsDeleteble, new { type = "checkbox", title = "Запретить удаление страницы", data_toggle = "toggle", data_on = "Запретить удаление", data_onstyle = "danger", data_off = "Разрешить удаление", data_offstyle = "success", data_width = "248", @data_help = "Запрещает удаление страницы, а также изменение некоторых ее свойств." })
            }

            <div class="topIndent-20">
                @if (!String.IsNullOrWhiteSpace(Model.Item.Alias))
                {
                    @Html.ActionLink("Документы", "index", "documents", new { @id = Model.Item.Id }, new { @id = "LogLists", @class = "button pop-up_frame icon-attach", @data_class = "LogList", @title = "Документы" })
                    @Html.ActionLink("Журнал изменений", "log", "services", new { @id = Model.Item.Id, @type = "page" }, new { @id = "LogLists", @class = "button pop-up_frame icon-archive", @data_class = "LogList", @title = "Журнал изменений" })
                }
            </div>
            @*<div class="group-block open" title="Ссылки">
                    @{
                        string relativePath = Model.Item.Path + Model.Item.Alias;
                        string absolutePath = "http://" + ViewBag.DefaultDomain + relativePath;
                    }
                    <div>
                        <small>Относительная ссылка для использования во внешней части вашего сайта:</small>
                        <code>@relativePath</code>
                    </div>
                    <br />
                    <div>
                        <small>Абсолютная ссылка для размещения на других сайтах:</small>
                        <code>@absolutePath</code>
                    </div>
                </div>*@
        </div>
    }
    else
    {
        <div class="content">
            <div class="alert alert-danger">
                <p>У Вас недостаточно прав.</p>
            </div>
        </div>
    }

    <div class="buttons">
        @*@if ((Model.Item != null && Model.UserResolution.Change) || (Model.Item == null && Model.UserResolution.Write))*@
        @if (true)
        {
            <button type="submit" name="action" value="save-btn" data-primary="true" class="button icon-create">Сохранить</button>
        }
        @*@if (Model.Item != null && Model.UserResolution.Delete)*@
        @if (true)
        {
            if (Model.Item.IsDeleteble)
            {
                <button type="submit" name="action" value="delete-btn" data-action="delete" class="button icon-delete">Удалить</button>
            }
        }
        <button type="submit" name="action" value="cancel-btn" data-action="cancel" class="button icon-cancel">Назад</button>
    </div>
}
