@model ModuleViewModel

@using (Html.BeginForm(Model.ActionName, Model.ControllerName, FormMethod.Post))
{
    @*if (Model.UserResolution.Write)*@
if (true)
{
    <div class="content">
        <div class="row">
            <div class="col-md-8"></div>
            <div class="col-md-3"></div>
        </div>
        <h1>@Model.PageName</h1>
        @Html.TextBoxFor(m => Model.Item.Title, new { @required = "", @Title = "Название Модуля", @placeholder = "Название", MaxLength = "512" })
        @Html.TextAreaFor(m => Model.Item.Desc, new { type = "text",  @Title = "Описание", MaxLength = "4096" })
        @Html.TextBoxFor(m => Model.Item.Controller, new { @required = "", @Title = "Контроллер", @placeholder = "SomeController", MaxLength = "512" })
        @Html.TextBoxFor(m => Model.Item.Action, new { @required = "", @Title = "Метод контроллера", @placeholder = "SomeAction", MaxLength = "512" })
    </div>
    <div class="dop_info-block">
        <div class="dop-caption">Настройки</div>
        <div class="form-group">
            <label>Шаблон</label>
            <select name="Item.View" class="form-control">
                <option value="@Guid.Empty"></option>
                @if (Model.Templates != null && Model.Templates.Count() > 0)
                {
                    foreach (var template in Model.Templates)
                    {
                        var selected = (Model.Item.View == template.Id) ? true : false;
                        <option value="@template.Id" @(selected? "selected":"")>@template.Title</option>
                        }
                    }
            </select>
            <label>*будет применяться по умолчанию для данного модуля</label>
        </div>
        @*@Html.TextBoxFor(m => m.Item.Date, new { required = "", data_type = "datetime", title = "Дата публикации", value = ViewBag.Date })*@

        @*@Html.DropDownListFor(m => m.Item.GroupsId, (MultiSelectList)ViewBag.GroupsValues, new { @title = "Группа", @class = "selectpicker", @multiple = "multiple" })*@
        @*<div class="form-group">
            <label for="itemGroups-select">Категория новости:</label>
            <select name="Item.GroupsId" id="itemGroups-select" class="form-control select2" multiple>
                @if (Model.Item != null && ViewBag.AllGroups != null)
                    {
                        foreach (var group in ViewBag.AllGroups)
                        {
                        <option value="@group.Id" @(Model.Item != null && Model.Item.Groups != null && Model.Item.Groups.Any(s => s.Id == group.Id) ? "selected" : null)>@group.Title</option>
                    }
                }
            </select>
        </div>*@

        @*@Html.CheckBoxFor(m => m.Item.Important, new { type = "checkbox", title = "Главная новость", data_toggle = "toggle", data_on = "Да", data_onstyle = "success", data_off = "Нет", data_offstyle = "danger", data_width = "248" })*@

        <div class="topIndent-20">
            @*@Html.ActionLink("Журнал изменений", "log", "services", new { @id = Model.Item.Id }, new { @id = "LogLists", @class = "button pop-up_frame icon-archive", @data_class = "LogList", @title = "Журнал изменений" })*@
        </div>
    </div>
}
else
{
    <p>@Settings.NoResolut</p>
}
    <div class="buttons">
        @*@if ((Model.Item != null && Model.UserResolution.Change) || (Model.Item == null && Model.UserResolution.Write))*@
        @if (true)
        {
            <button type="submit" name="action" value="save-btn" data-primary="true" class="button icon-create">Сохранить</button>
        }
        @*@if (Model.Item != null && Model.UserResolution.Delete)*@
        @if (true)
        {
            <button type="submit" name="action" data-action="delete" value="delete-btn" class="button icon-delete">Удалить</button>
        }
        <button type="submit" name="action" value="cancel-btn" class="button icon-cancel">Закрыть</button>
    </div>
}