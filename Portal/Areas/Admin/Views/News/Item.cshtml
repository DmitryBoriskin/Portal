@model NewsViewModel
@using (Html.BeginForm(Model.ActionName, Model.ControllerName, FormMethod.Post, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="content">
        <h1>@ViewBag.Title</h1>        
        @Html.TextBoxFor(m => m.Item.Title, new { @class = "uc_input", @required = "", @title = "Название", @placeholder = "Название", @MaxLength = "512" })

        <div class="row">
            <div class="col-lg-12">
                @Html.TextBoxFor(m => m.Item.Photo, new { type = "file", data_posted_name = "upload",data_url= @ViewBag.Photo, title = "Картинка для предпросмотра", data_help = "Размер фотографии должен быть не менне 400 точек по ширине и пропорции картинки - 4х3", accept = ".jpg,.jpeg,.png,.gif" })
            </div>
        </div>
        <div class="group-block" title="Текст">
            @Html.TextAreaFor(m => m.Item.Text, new { @type = "editor", @height = "300", data_dir = ViewBag.DataPath })
        </div>
        
        @Html.TextBoxFor(m => m.Item.SourceName, new { @class = "uc_input",  @title = "Источник", @placeholder="Сайт органов власти" })
        @Html.TextBoxFor(m => m.Item.SourceUrl, new { @class = "uc_input",  @title = "Источник", @placeholder = "http://example.com" })
        

        @*виджет событий*@
        @{Html.RenderAction("index", "EventsWidget");}
            

                        </div>
                        <div class="dop_info-block">
                            <div class="dop-caption icon-layers">Доп. параметры</div>

                            @Html.TextBoxFor(m => m.Item.Date, new { required = "", data_type = "datetime", title = "Дата публикации", value = ViewBag.Date })

                            @Html.TextBoxFor(m => m.Item.Alias, new { @class = "uc_input", @title = "Алиас", @placeholder = "news-name", @MaxLength = "512", @data_help = "Часть URL(адреса) новости" })
                            <div class="form-group">
                                <label for="itemServices-select">Категории:</label>
                                <select name="Item.Services" id="itemServices-select" class="form-control select2" multiple>
                                    @foreach (var cat in Model.Category)
                                    {
                                        <option value="@cat.Id" @(Model.Item != null && Model.Item.Category != null && Model.Item.Category.Any(s => s.Id == cat.Id) ? "selected" : null)>@cat.Name</option>
                                    }
                                </select>
                            </div>
                            @Html.CheckBoxFor(m => m.Item.Important, new { type = "checkbox", title = "Главная новость", data_toggle = "toggle", data_on = "Да", data_onstyle = "success", data_off = "Нет", data_offstyle = "danger", data_width = "248" })
                            @Html.CheckBoxFor(m => m.Item.Disabled, new { type = "checkbox", title = "Запретить просмотр", data_toggle = "toggle", data_on = "запретить просмотр", data_onstyle = "danger", data_off = "показывать на сайте", data_offstyle = "success", data_width = "248" })

                            <div class="group-block open topIndent-20" title="Мета теги">
                                @Html.TextAreaFor(m => m.Item.Keyw, new { type = "text", title = "Ключевые слова", data_help = "Данный тег используется при создании краткого описания страницы, используется поисковыми системами для индексации, а также при создании аннотации в выдаче по запросу. При отсутствии тега поисковые системы выдают в аннотации первую строку документа или отрывок, содержащий ключевые слова." })
                                @Html.TextAreaFor(m => m.Item.Desc, new { type = "text", title = "Краткое описание", data_help = "Данный метатег поисковые системы используют для того, чтобы определить релевантность ссылки. При формировании данного тега необходимо использовать только те слова, которые содержатся в самом документе. Использование тех слов, которых нет на странице, не рекомендуется. Рекомендованное количество слов в данном теге — не более десяти." })
                            </div>

                            @if (Model.Item != null)
                            {
                                @Html.ActionLink("Журнал изменений", "Log", "services", new { @id = Model.Item.Id, @type = "page" }, new { @id = "LogLists", @class = "button pop-up_frame icon-archive", @data_class = "LogList", @title = "Журнал изменений" })
                            }
                        </div>
                        <div class="buttons">
                            @if (User.Identity.HasClaim(Model.ControllerName, "edit") || User.Identity.HasClaim(Model.ControllerName, "create"))
                            {
                                <button type="submit" name="action" value="save-btn" data-primary="true" class="button icon-create">Сохранить</button>
                            }
                            @if (User.Identity.HasClaim(Model.ControllerName, "delete"))
                            {
                                <button type="submit" name="action" data-action="delete" value="delete-btn" class="button icon-delete">Удалить</button>
                            }
                            <button type="submit" name="action" value="cancel-btn" data-action="cancel" class="button icon-cancel">Закрыть</button>
                        </div>
                }
